{"version":3,"sources":["components/Form/Form.module.css","components/ContactList/Contats.module.css","components/Filter/Filter.module.css","components/Section/Section.module.css","redux/phone-book/phonebook-actions.js","redux/phone-book/phonebook-operations.js","redux/phone-book/phonebook-selector.js","components/ContactList/ContactList.js","components/Form/Form.js","components/Filter/Filter.js","components/Section/Section.js","components/App.js","reportWebVitals.js","redux/phone-book/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","fetchContacts","dispatch","a","get","data","addContact","name","number","contact","completed","post","then","catch","error","deleteContact","contactId","delete","getContact","state","phonebook","contacts","getFilter","filter","getLoading","loading","getFilterName","normalizedName","toLowerCase","includes","ContactList","useSelector","phoneBoookSelectors","useDispatch","length","map","id","className","s","item","type","onClick","phoneBoookOperations","onDelete","contactBtn","Form","useState","setState","useForm","register","handleSubmit","reset","useEffect","oninputHandler","target","value","onSubmit","text","alert","label","ref","onChange","placeholder","addBtn","Filter","filterLabel","phoneBoookActions","Section","title","children","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","contactsReducer","createReducer","_","payload","filterReducer","phonebookReducer","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","devTools","process","storeObj","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc33249b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__2m4BG\",\"a\":\"Form_a__36YLm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contats_item__6qTAA\",\"contactBtn\":\"Contats_contactBtn__1Bxbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1hfpI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__1X2GH\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contact/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contact/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contact/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contact/addContactRequest');\r\nexport const addContactSuccess = createAction('contact/addContactSuccess');\r\nexport const addContactError = createAction('contact/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contact/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contact/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contact/deleteContactError');\r\n\r\nexport const filterContact = createAction('contact/change');\r\n","import axios from 'axios';\r\n\r\nimport {\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3004';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = { name, number, completed: false };\r\n\r\n  dispatch(addContactRequest);\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nexport const deleteContact = contactId => dispatch => {\r\n  dispatch(deleteContactRequest);\r\n\r\n  axios\r\n    .delete(`contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch(error => dispatch(deleteContactError, error));\r\n};\r\n","export const getContact = state => state.phonebook.contacts;\r\nexport const getFilter = state => state.phonebook.filter;\r\nexport const getLoading = state => state.phonebook.loading;\r\n\r\nexport const getFilterName = state => {\r\n  const contacts = getContact(state);\r\n  const filter = getFilter(state);\r\n  const normalizedName = filter.toLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedName),\r\n  );\r\n};\r\n// alert('Please enter uniqe value');\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { phoneBoookSelectors } from 'redux/phone-book';\r\n\r\nimport s from './Contats.module.css';\r\nimport { phoneBoookOperations } from 'redux/phone-book';\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(phoneBoookSelectors.getFilterName);\r\n  const dispatch = useDispatch();\r\n  const onDelete = id => dispatch(phoneBoookOperations.deleteContact(id));\r\n\r\n  if (contacts.length === 0) {\r\n    return null;\r\n  }\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={s.item}>\r\n          <p>\r\n            {name}: {number}\r\n          </p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              onDelete(id);\r\n            }}\r\n            className={s.contactBtn}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default ContactList;\r\n","import { useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { phoneBoookOperations } from '../../redux/phone-book';\r\nimport s from './Form.module.css';\r\n\r\nconst Form = () => {\r\n  const [state, setState] = useState();\r\n  const { register, handleSubmit, reset } = useForm();\r\n  const dispatch = useDispatch();\r\n  const onSubmit = text => dispatch(phoneBoookOperations.addContact(text));\r\n  useEffect(() => {\r\n    dispatch(phoneBoookOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  const oninputHandler = ({ target }) => {\r\n    const { name, value } = target;\r\n    setState(state => ({ ...state, [name]: value }));\r\n  };\r\n\r\n  const onSubmitHandler = () => {\r\n    const { name, number } = state;\r\n\r\n    !name || !number ? alert(`Some field are empty`) : onSubmit(state);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmitHandler)} className={s.a}>\r\n      <label className={s.label}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          ref={register}\r\n          name=\"name\"\r\n          onChange={oninputHandler}\r\n          placeholder=\"Enter name\"\r\n        />\r\n      </label>\r\n      <label className={s.label}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          ref={register}\r\n          name=\"number\"\r\n          onChange={oninputHandler}\r\n          placeholder=\"Enter phone number\"\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\" className={s.addBtn}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { phoneBoookSelectors } from 'redux/phone-book';\r\nimport s from './Filter.module.css';\r\nimport { phoneBoookActions } from 'redux/phone-book';\r\n\r\nfunction Filter() {\r\n  const filter = useSelector(phoneBoookSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n  const onChange = ({ target }) =>\r\n    dispatch(phoneBoookActions.filterContact(target.value));\r\n  return (\r\n    <>\r\n      <label className={s.filterLabel}>\r\n        Find contact by name\r\n        <input\r\n          type=\"text\"\r\n          value={filter}\r\n          onChange={onChange}\r\n          placeholder=\"Enter name to filter\"\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nimport s from './Section.module.css';\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n","import ContactList from './ContactList';\nimport Form from './Form';\nimport Filter from './Filter';\nimport Section from './Section';\n\nconst App = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <Form />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  fetchContactSuccess,\r\n  fetchContactRequest,\r\n  fetchContactError,\r\n  filterContact,\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './phonebook-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loading,\r\n});\r\nexport default phonebookReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nimport phonebookReducer from './phone-book/phonebook-reducer';\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(persistConfig, phonebookReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst storeObj = { store, persistor };\r\n\r\nexport default storeObj;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport storeObj from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={storeObj.store}>\n      <PersistGate loading={'Loading...'} persistor={storeObj.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}